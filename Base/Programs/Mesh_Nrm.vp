!!ARBvp1.0

ATTRIB		vertPos = vertex.attrib[0];
ATTRIB		vertNormal = vertex.attrib[1];
ATTRIB		vertTangent = vertex.attrib[2];
ATTRIB		vertUV = vertex.attrib[3];

PARAM		worldMat[] = { program.local[0..3] };
PARAM		viewProjMat[] = { program.local[4..7] };
PARAM		camPos = program.local[8];

OUTPUT		varPos = result.position;
OUTPUT		varUV = result.texcoord[0];
OUTPUT		varLightVec = result.texcoord[1]; # tangent space

TEMP		r0, r1, binormal;


# world space vertex position
DP4			r0.x, worldMat[0], vertPos;
DP4			r0.y, worldMat[1], vertPos;
DP4			r0.z, worldMat[2], vertPos;
DP4			r0.w, worldMat[3], vertPos;

# clip space vertex position
DP4			varPos.x, viewProjMat[0], r0;
DP4			varPos.y, viewProjMat[1], r0;
DP4			varPos.z, viewProjMat[2], r0;
DP4			varPos.w, viewProjMat[3], r0;

# output UV
MOV			varUV, vertUV;

# world space light vector (same as negative view vector)
SUB			r0, r0, camPos;
# object space light vector
MUL			r1, worldMat[0], r0.x;
MAD			r1, worldMat[1], r0.y, r1;
MAD			r1, worldMat[2], r0.z, r1;
# tangent space light vector
XPD			binormal, vertNormal, vertTangent;
MUL			binormal, binormal, vertTangent.w;
DP3			varLightVec.x, r1, vertTangent;
DP3			varLightVec.y, r1, binormal;
DP3			varLightVec.z, r1, vertNormal;

END
